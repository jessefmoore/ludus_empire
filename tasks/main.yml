---
- name: Update the apt package index
  become: true
  apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes
- name: Install packages for apt add repository over HTTPS
  become: True
  apt:
    name: "{{ packagesdep }}"
    force_apt_get: yes
    state: latest
    update_cache: yes
  vars:
    packagesdep:
    - git
    - apt-transport-https
    - ca-certificates
    - wget
    - software-properties-common
    - gnupg2
    - curl
    - docker.io
  ansible.builtin.apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes
- name: Check if Docker image is present
  shell: docker image inspect bcsecurity/empire:latest >/dev/null 2>&1
  ignore_errors: true
  register: image_check_result
- name: pull empire image if Docker image doesn't exist
  docker_image:
    name: bcsecurity/empire
    tag: latest
    source: pull
  when: image_check_result.rc != 0
  register: image_pull_result
- name: debug message if image was pulled
  debug:
    msg: "Docker image exists, skipping pull empire image tasks..."
  when: image_pull_result.changed
- name: Check if data volume exists
  ansible.builtin.shell:
    cmd: docker inspect -f '{{ .Mounts }}' data | grep "/empire"
  register: volume_check_result
  ignore_errors: true
- name: Create data volume if it doesn't exist
  ansible.builtin.shell:
    cmd: docker create -v /empire --name data bcsecurity/empire:latest
  when: volume_check_result.rc != 0
  - name: Check if empire container exists
  ansible.builtin.shell:
    cmd: docker inspect empire >/dev/null 2>&1
  ignore_errors: true
  register: container_check_result
- name: Start empire container if it doesn't exist
  ansible.builtin.docker_container:
    name: empire
    image: bcsecurity/empire
    state: started
    detach: true
    ports:
      - "1337:1337"
      - "1336:1336"
      - "5000:5000"
    volumes_from:
      - data
  when: container_check_result.rc != 0
